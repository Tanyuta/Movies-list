{"remainingRequest":"/Users/tanyuta/Documents/tech_tasks/tech_task_adraba/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tanyuta/Documents/tech_tasks/tech_task_adraba/src/components/ListMovies.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tanyuta/Documents/tech_tasks/tech_task_adraba/src/components/ListMovies.vue","mtime":1547505002144},{"path":"/Users/tanyuta/Documents/tech_tasks/tech_task_adraba/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanyuta/Documents/tech_tasks/tech_task_adraba/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tanyuta/Documents/tech_tasks/tech_task_adraba/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanyuta/Documents/tech_tasks/tech_task_adraba/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: 'ListMovies',\n    data() {\n        return {\n            items: [],\n            currentPage: 1,\n            totalPages: 1,\n            baseUrl: 'https://api.themoviedb.org/3',\n            apiKey: '9c0bb3e4f21289191ff35377e8ef2757',\n            imageUrl: 'https://image.tmdb.org/t/p/w342',\n            loaded: true\n        }\n    },\n    mounted() {\n        this.getData();\n        this.scroll();\n    },\n    methods: {\n\n        getData() {\n            if (this.currentPage > this.totalPages) {\n                return;\n            } else {\n                axios.get(this.baseUrl + '/discover/movie?api_key=' + this.apiKey + '&sort_by=popularity.desc' + '&page=' + this.currentPage)\n                    .then(response => {\n                        this.totalPages = response.data.total_pages;\n                        response.data.results.forEach(element => {\n                            this.items.push(element);\n                        });\n                        this.loaded = false;\n                    })\n                    .catch(error => {\n                        throw new Error(error);\n                    });\n            }\n        },\n        showDetaisMovie(movie) {\n            localStorage.setItem('movie', JSON.stringify(movie));\n            this.$router.push('/details');\n        },\n        scroll() {\n            window.onscroll = () => {\n                let manualOffset = 10\n                let bottomOfWindow = document.documentElement.scrollTop + window.innerHeight >= (document.documentElement.offsetHeight - manualOffset);\n                if (bottomOfWindow) {\n                    if (this.currentPage <= this.totalPages) {\n                        this.loaded = true;\n                        this.currentPage += 1;\n                        this.getData();\n                    }\n                }\n            };\n        },\n    }\n}\n",{"version":3,"sources":["ListMovies.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ListMovies.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <div v-show=\"loaded\" class=\"loader\"></div>\n        <h1>Movies list</h1>\n        <ul>\n            <li v-for=\"(item, i) in items\" :key=\"i\" @click=\"showDetaisMovie(item)\">\n                <img :src=\"imageUrl + item.poster_path\" alt=\"\">\n                <h5 class=\"pt-3\">{{ item.original_title }}</h5>\n            </li>\n        </ul>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'ListMovies',\n        data() {\n            return {\n                items: [],\n                currentPage: 1,\n                totalPages: 1,\n                baseUrl: 'https://api.themoviedb.org/3',\n                apiKey: '9c0bb3e4f21289191ff35377e8ef2757',\n                imageUrl: 'https://image.tmdb.org/t/p/w342',\n                loaded: true\n            }\n        },\n        mounted() {\n            this.getData();\n            this.scroll();\n        },\n        methods: {\n    \n            getData() {\n                if (this.currentPage > this.totalPages) {\n                    return;\n                } else {\n                    axios.get(this.baseUrl + '/discover/movie?api_key=' + this.apiKey + '&sort_by=popularity.desc' + '&page=' + this.currentPage)\n                        .then(response => {\n                            this.totalPages = response.data.total_pages;\n                            response.data.results.forEach(element => {\n                                this.items.push(element);\n                            });\n                            this.loaded = false;\n                        })\n                        .catch(error => {\n                            throw new Error(error);\n                        });\n                }\n            },\n            showDetaisMovie(movie) {\n                localStorage.setItem('movie', JSON.stringify(movie));\n                this.$router.push('/details');\n            },\n            scroll() {\n                window.onscroll = () => {\n                    let manualOffset = 10\n                    let bottomOfWindow = document.documentElement.scrollTop + window.innerHeight >= (document.documentElement.offsetHeight - manualOffset);\n                    if (bottomOfWindow) {\n                        if (this.currentPage <= this.totalPages) {\n                            this.loaded = true;\n                            this.currentPage += 1;\n                            this.getData();\n                        }\n                    }\n                };\n            },\n        }\n    }\n</script>\n\n<style scoped lang=\"scss\">\n    ul {\n        li {\n            display: inline-block;\n            vertical-align: top;\n            width: 25vw;\n            position: relative;\n            overflow: hidden;\n            margin: 10px;\n            &:hover {\n                section {\n                    opacity: 1;\n                    transform: translate3d(0, 0, 0);\n                }\n                img {\n                    transform: scale(0.9);\n                }\n            }\n            img {\n                width: 100%;\n                height: auto;\n                display: block;\n                transform: scale(1);\n                transition: transform 350ms ease-in-out;\n            }\n        }\n    }\n    \n    section {\n        position: absolute;\n        bottom: 0;\n        background: rgba(white, 0.9);\n        padding: 20px;\n        overflow: hidden;\n        height: 100%;\n        width: 100%;\n        overflow-y: scroll;\n        opacity: 0;\n        transform: translate3d(0, 10%, 0);\n        transition: opacity 350ms ease-in-out 150ms, transform 350ms ease-in-out 150ms;\n        h3 {\n            margin-bottom: 10px;\n            font-size: 18px;\n        }\n        p {\n            line-height: 1.4;\n            font-size: 15px;\n        }\n    }\n</style>\n"]}]}